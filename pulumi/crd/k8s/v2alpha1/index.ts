// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { KeycloakArgs } from "./keycloak";
export type Keycloak = import("./keycloak").Keycloak;
export const Keycloak: typeof import("./keycloak").Keycloak = null as any;
utilities.lazyLoad(exports, ["Keycloak"], () => require("./keycloak"));

export { KeycloakRealmImportArgs } from "./keycloakRealmImport";
export type KeycloakRealmImport = import("./keycloakRealmImport").KeycloakRealmImport;
export const KeycloakRealmImport: typeof import("./keycloakRealmImport").KeycloakRealmImport = null as any;
utilities.lazyLoad(exports, ["KeycloakRealmImport"], () => require("./keycloakRealmImport"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:k8s.keycloak.org/v2alpha1:Keycloak":
                return new Keycloak(name, <any>undefined, { urn })
            case "kubernetes:k8s.keycloak.org/v2alpha1:KeycloakRealmImport":
                return new KeycloakRealmImport(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "k8s.keycloak.org/v2alpha1", _module)
