apiVersion: v1
kind: Namespace
metadata:
  name: echoserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
  namespace: echoserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echoserver
  template:
    metadata:
      labels:
        app: echoserver
    spec:
      containers:
      - name: echoserver
        image: ealen/echo-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
  namespace: echoserver  # Assuming "echoserverNamespace.metadata.name" resolves to "echoserver"
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
  selector:
    app: echoserver
---
apiVersion: networking.v1
kind: Ingress
metadata:
  name: echo-server
  namespace: echoserver
  annotations:
    konghq.com/plugins: "https-port-plugin,oidc"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: kong
  tls:
  - hosts:
    - echo-server.{{.Values.ingress.domain}}
    secretName: echo-server.{{.Values.ingress.domain}}-tls  # Replace "rootDomain" with the actual root domain
  rules:
  - host: echo-server.{{.Values.ingress.domain}}  # Replace "rootDomain" with the actual root domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echoserver  # Assuming "service.metadata.name" resolves to "echoserver"
            port:
              name: http
