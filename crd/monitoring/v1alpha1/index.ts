// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AlertmanagerConfigArgs } from "./alertmanagerConfig";
export type AlertmanagerConfig = import("./alertmanagerConfig").AlertmanagerConfig;
export const AlertmanagerConfig: typeof import("./alertmanagerConfig").AlertmanagerConfig = null as any;
utilities.lazyLoad(exports, ["AlertmanagerConfig"], () => require("./alertmanagerConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:monitoring.coreos.com/v1alpha1:AlertmanagerConfig":
                return new AlertmanagerConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "monitoring.coreos.com/v1alpha1", _module)
